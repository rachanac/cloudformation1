#!/bin/bash
cf_region=us-east-2
cf_stack_name=cfn-production-centraldata-okindustrial-webinstance
pm_parameter_key="/production/AMI"
cf_stack_success=UPDATE_COMPLETE
packer_build_file=/home/redux/packer-ami/build_prod.json
packer_variable_file=/home/redux/packer-ami/prod_variables.json
packer_manifest_file=/home/redux/packer-ami/prod_blog_manifest.json

#Functions
#-------------------------------------------------------------------------------
# Retrieve the status of a cfn stack
#-------------------------------------------------------------------------------
getStackStatus() {
	aws cloudformation describe-stacks \
		--region $cf_region \
		--stack-name $cf_stack_name \
		--query Stacks[].StackStatus \
		--output text
}

#-------------------------------------------------------------------------------
# Waits for a stack to reach a given status. If the stack ever reports any
# status other thatn *_IN_PROGRESS we will return failure status, as all other
# statuses that are not the one we are waiting for are considered terminal
#-------------------------------------------------------------------------------
waitForState() {
	local status

	status=$(getStackStatus $cf_stack_name)

	while [[ "$status" != "$cf_stack_success" ]]; do
		echo "Waiting for stack $cf_stack_status to obtain status $cf_stack_success - Current status: $status"

		# If the status is not one of the "_IN_PROGRESS" status' then consider
		# this an error
		if [[ "$status" != *"_IN_PROGRESS"* ]]; then
			exitWithErrorMessage "Unexpected status '$status'"
		fi

		status=$(getStackStatus $cf_stack_name)

		sleep 5
	done
	echo "Stack $cf_stack_name obtained $cf_stack_success status"
}

#-------------------------------------------------------------------------------
# Error Message
#-------------------------------------------------------------------------------
exitWithErrorMessage() {
	echo "ERROR: $1"
	exit 1
}

#Run packer
if [ -f $packer_manifest_file ] ; then
    rm $packer_manifest_file
fi
packer build -var vault_pass=`cat /home/redux/.vault_password` -var-file=$packer_variable_file $packer_build_file 
packer_image_output=`cat $packer_manifest_file | jq -r .builds[0].artifact_id |  cut -d':' -f2`
cf_parameter_value=$packer_image_output

if [ -z "$cf_parameter_value" ]; then
	exitWithErrorMessage "No AMI generated by packer!"
fi

#Update Parameter value
aws ssm put-parameter \
    --name $pm_parameter_key \
    --value $packer_image_output \
    --region $cf_region \
    --overwrite

if ! [ "$?" = "0" ]; then
     exitWithErrorMessage "cannot update parameter value"
fi     

#Update Stack
aws cloudformation update-stack \
    --region $cf_region \
    --stack-name $cf_stack_name \
    --use-previous-template

if ! [ "$?" = "0" ]; then
	exitWithErrorMessage "Cannot Update stack ${stackName}!"
fi

#Wait for completion
waitForState ${cf_stack-name} ${cf_stack-success}
